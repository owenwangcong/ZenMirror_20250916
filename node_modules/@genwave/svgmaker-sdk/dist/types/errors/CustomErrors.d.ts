/**
 * Base error class for SVGMaker SDK
 */
export declare class SVGMakerError extends Error {
    /**
     * @param message Error message
     */
    constructor(message: string);
}
/**
 * Error for validation failures
 */
export declare class ValidationError extends SVGMakerError {
    /**
     * @param message Error message
     */
    constructor(message: string);
}
/**
 * Error for API response errors
 */
export declare class APIError extends SVGMakerError {
    /**
     * HTTP status code
     */
    statusCode?: number;
    /**
     * Error code returned by the API
     */
    code?: string;
    /**
     * Error details returned by the API
     */
    details?: string;
    /**
     * @param message Error message
     * @param statusCode HTTP status code
     * @param code Error code
     * @param details Error details
     */
    constructor(message: string, statusCode?: number, code?: string, details?: string);
}
/**
 * Error for rate limiting issues
 */
export declare class RateLimitError extends APIError {
    /**
     * Time in seconds to wait before retrying
     */
    retryAfter?: number;
    /**
     * @param message Error message
     * @param retryAfter Time in seconds to wait before retrying
     */
    constructor(message: string, retryAfter?: number);
}
/**
 * Error for authorization issues
 */
export declare class AuthError extends APIError {
    /**
     * @param message Error message
     */
    constructor(message: string);
}
/**
 * Error for insufficient credits
 */
export declare class InsufficientCreditsError extends APIError {
    /**
     * Number of credits required
     */
    creditsRequired?: number;
    /**
     * @param message Error message
     * @param creditsRequired Number of credits required
     */
    constructor(message: string, creditsRequired?: number);
}
/**
 * Error for timeout issues
 */
export declare class TimeoutError extends SVGMakerError {
    /**
     * Request timeout in milliseconds
     */
    timeout: number;
    /**
     * @param message Error message
     * @param timeout Request timeout in milliseconds
     */
    constructor(message: string, timeout: number);
}
/**
 * Error for network issues
 */
export declare class NetworkError extends SVGMakerError {
    /**
     * Original error
     */
    originalError?: Error;
    /**
     * @param message Error message
     * @param originalError Original error
     */
    constructor(message: string, originalError?: Error);
}
/**
 * Error for content safety issues
 */
export declare class ContentSafetyError extends APIError {
    /**
     * @param message Error message
     */
    constructor(message: string);
}
/**
 * Error for file size issues
 */
export declare class FileSizeError extends APIError {
    /**
     * @param message Error message
     */
    constructor(message: string);
}
/**
 * Error for file format issues
 */
export declare class FileFormatError extends APIError {
    /**
     * @param message Error message
     */
    constructor(message: string);
}
//# sourceMappingURL=CustomErrors.d.ts.map