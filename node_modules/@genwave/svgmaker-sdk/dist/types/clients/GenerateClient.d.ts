import { BaseClient } from './BaseClient';
import { GenerateParams, GenerateResponse } from '../types/api';
import { SVGMakerClient } from '../core/SVGMakerClient';
import { Readable } from 'stream';
/**
 * Client for the Generate SVG API
 */
export declare class GenerateClient extends BaseClient {
    private params;
    /**
     * Create a new Generate client
     * @param client Parent SVGMaker client
     */
    constructor(client: SVGMakerClient);
    /**
     * Execute the Generate SVG request
     * @returns Generate response
     */
    execute(): Promise<GenerateResponse>;
    /**
     * Configure the generation parameters
     * @param config Configuration object with generation parameters
     * @returns New client instance
     */
    configure(config: Partial<GenerateParams>): GenerateClient;
    /**
     * Apply default values based on business rules
     * @private
     */
    private applyDefaults;
    /**
     * Stream the generation response
     * @returns Readable stream of events
     */
    stream(): Readable;
    /**
     * Create a clone of this client
     * @returns New client instance
     */
    protected clone(): GenerateClient;
}
//# sourceMappingURL=GenerateClient.d.ts.map