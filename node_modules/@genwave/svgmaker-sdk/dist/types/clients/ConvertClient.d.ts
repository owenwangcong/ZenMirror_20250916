import { BaseClient } from './BaseClient';
import { ConvertParams, ConvertResponse } from '../types/api';
import { SVGMakerClient } from '../core/SVGMakerClient';
import { Readable } from 'stream';
/**
 * Client for the Convert Image to SVG API
 */
export declare class ConvertClient extends BaseClient {
    private params;
    /**
     * Create a new Convert client
     * @param client Parent SVGMaker client
     */
    constructor(client: SVGMakerClient);
    /**
     * Execute the Convert request
     * @returns Convert response
     */
    execute(): Promise<ConvertResponse>;
    /**
     * Configure the convert parameters
     * @param config Configuration object with convert parameters
     * @returns New client instance
     */
    configure(config: Partial<ConvertParams>): ConvertClient;
    /**
     * Stream the convert response
     * @returns Readable stream of events
     */
    stream(): Readable;
    /**
     * Add a file to the form data
     * @param formData Form data
     * @param fieldName Form field name
     * @param file File path, buffer, or stream
     */
    private addFileToForm;
    /**
     * Get MIME type from filename
     * @param filename File name
     * @returns MIME type
     */
    private getMimeType;
    /**
     * Create a clone of this client
     * @returns New client instance
     */
    protected clone(): ConvertClient;
}
//# sourceMappingURL=ConvertClient.d.ts.map