import { Server } from '@modelcontextprotocol/sdk/server/index.js';
export interface ProgressConfig {
    server: Server;
    progressToken?: string | number;
    totalSteps: number;
    messages: {
        initial: string;
        preparing: string;
        processing: string;
        saving: string;
        complete: string;
    };
}
export declare class ProgressManager {
    private server;
    private progressToken?;
    private totalSteps;
    private currentStep;
    private messages;
    private progressInterval;
    private currentProgress;
    constructor(config: ProgressConfig);
    sendInitialProgress(): Promise<void>;
    sendPreparingProgress(): Promise<void>;
    startProcessingProgress(): Promise<void>;
    stopProcessingProgress(): void;
    sendSavingProgress(): Promise<void>;
    sendFinalProgress(): Promise<void>;
    cleanup(): void;
}
export declare function sendSimpleProgress(server: Server, progressToken: string | number | undefined, step: number, total: number, message?: string): Promise<void>;
